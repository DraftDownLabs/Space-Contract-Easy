import os
import json
import time
from web3 import Web3

def setup_web3_provider(timeout=120):
    os.environ['ALCHEMY_KOVAN_API_KEY'] = ''
    env = 'ALCHEMY_KOVAN_API_KEY'
    end_point = f'https://eth-kovan.alchemyapi.io/v2/{os.environ[env]}'
    w3 = Web3(Web3.HTTPProvider(
        endpoint_uri=end_point,
        request_kwargs={
            'timeout': timeout
        }
    ))
    return w3

owner = '0x85BFba62f1b0bb5ad63Dc15611B96A3457095390'
alice = '0x488daD0ce94f34e33069b8Ae5E16826b63f0F575'
bob   = '0xB09c603eA024b4435D74db07d1f728A80E6e36aE'
cathy = '0x941c73fBB405a9024C08A52cBEeAF80D02d2B1A1'

market = '0x16537776395108789FE5cC5420545CAb210a7D30'
usdt = '0x13512979ADE267AB5100878E2e0f485B568328a4'

blocks = [30460914, 30460923, 30460928, 30461363, 30461371, 30461372, 30461374, 30461377, 30461378, 30461414, 30461416, 30461418, 30461419, 30461538, 30461582, 30461660, 30461710, 30461716, 30461747, 30461788, 30462076, 30462090, 30462097, 30462120, 30462159, 30462170, 30462178, 30462181, 30462184, 30462186, 30462205, 30462216, 30462222, 30462233, 30462235, 30462272, 30462275, 30462290, 30462292, 30462297, 30462299, 30462308, 30462312, 30462322, 30462330, 30462334, 30462336, 30462340, 30462389, 30462400, 30462408, 30462417, 30462423, 30462430, 30462441, 30462467, 30462475, 30462480, 30462484, 30462492, 30462510, 30462513, 30462520, 30462530, 30462537, 30462550, 30462560, 30462573, 30462575, 30462581, 30462592, 30462594, 30462598, 30462613, 30462622, 30462632, 30462633, 30462646, 30462657, 30462672, 30462687, 30462692, 30462694, 30462701, 30462708, 30462710, 30462712, 30462724, 30462725, 30462734, 30462753, 30462770, 30462776, 30462784, 30462790, 30462810, 30462823, 30462832, 30462836, 30462854, 30462871, 30462880, 30462891, 30462903, 30462906, 30462929, 30462930, 30462944, 30462957, 30462959, 30462975, 30462981, 30462998, 30463008, 30463019, 30463038, 30463040, 30463060, 30463077, 30463083, 30463105, 30463111, 30463120, 30463124, 30463134, 30463140, 30463149, 30463175, 30463184, 30463192, 30463208, 30463213, 30463249, 30463261, 30463263, 30463268, 30463277, 30463281, 30463292, 30463294, 30463308, 30463309, 30463324, 30463338, 30463340, 30463344, 30463356, 30463359, 30463364, 30463372, 30463374, 30463377, 30463384, 30463400, 30463403, 30463414, 30463426, 30463428, 30463446, 30463453, 30463475, 30463486, 30463513, 30463519, 30463532, 30463539, 30463543, 30463547, 30463550, 30463555, 30463561, 30463563]

with open('abi.json', 'r') as f:
    obj = json.load(f)
abi = json.loads(obj['result'])
w3 = setup_web3_provider()
cont = w3.eth.contract(address=market, abi=abi)

attack_tx_hashes, attack_pids = set(), set()
for block_num in blocks:
    print('block # = ', block_num)
    block = w3.eth.get_block(block_num)
    for tx_hash in block['transactions']:
        tx = w3.eth.get_transaction(tx_hash)
        if tx['from'] in [alice, bob, cathy] and tx['to'] == market:
            tx_receipt = w3.eth.get_transaction_receipt(tx_hash)
            if tx_receipt['status'] == 1: # success
                func, args = cont.decode_function_input(tx['input'])
                if func.fn_name == 'createPosition' and args['borrowedToken'] == usdt:
                    print('found attack, createPosition')
                    pid = cont.events.CreatePosition().processReceipt(tx_receipt)[0]['args']['pid']
                    attack_tx_hashes.add(tx_hash)
                    attack_pids.add((tx['from'], pid))
                if func.fn_name == 'borrow' and (tx['from'], args['pid']) in attack_pids:
                    print('found attack, borrow')
                    attack_tx_hashes.add(tx_hash)
    time.sleep(0.5)

print(attack_tx_hashes)

'''
The attack transactions are:
txs = [
    '0x0635eeabe77d53672c227c0938f73f43c8f43b984e2c02d4e4a7b4e4d9740a09',
    '0x13240bc2ce9333db092704b057083d23fa4e365b1b049ea839eb9955591ffd4d',
    '0x3a109f0754113742eaae4bad747261aa7d9a1a9e2fb4d12704631b333b790006',
    '0x6287be53eb87e475cfdabfe85c7db800c5262a469a4c270e55b8ddf481b6dae3',
    '0x657b24138cea98eca019de351d60c69210334926c46d9bfb7a59f5c0db5d16f4',
    '0x6705735d1d4c526cd5db6c5810de6b11ba196fb93715a67ae855d037bfeaeaec',
    '0x6b52684eda64076701e647911f55019fb18b30d980554dd2df5ee0e777506c3a',
    '0x6ce3f133f0d925b125b6d8861b582cfd3b9abc8df4ce6ecd9607751b5fa6e796',
    '0x8b0b5a0d65a1272d811f1db90cf7a24e43c64cf0d4767a78accf0dd9afce954c',
    '0x8beb80929a026d68fe9e80d0e46dadf43f9b8c68dc1db7e53b996e9654a3c71c',
    '0x95bc3879debc5ffbe9932d5a60dd53146374e7dd553fef5f00152371bbb75f38',
    '0x99a5722bb73a73c6b47967f9b457e888d6503b0f9e1bf23fbf36de56ebad1522',
    '0xb1f54b9969ba60075775a3168d2ad16482e672cbf386ba4f9d6f433fe9d86fbe',
    '0xc20e2ac5792a3350febd9a7e62527faccf4e07de2c1454572380e6f629ecca18',
    '0xcc8ff167cc6a1014f5c4b7445f26b17f68cc95bcc0c578c5330278dda8229d0b',
    '0xcfb692d772f8acb90bc14a5da06f72c8ed9d871bbe76787ac0fa8a40e1ef11aa',
    '0xdb3f9da9cc6600ba9c2ca0685cd5c29818dae632fb3be65d530ef404b3ade202',
    '0xdd588f3c2a9f25aa57d27e3257fe93882cf211470bd92e56b5271f95ab3c955f',
    '0xea24903d0a72b56457b88bdfd842f4065b0371b9c118dae08aca8dadb43c81b4',
    '0xef40506ae849c17dfbb75f97331860750217602f9c0a9c7718e50d04f0e233b8',
    '0xf7a6068687cfd85a24c8fd169c3c95133ff7a957c843171733902925990b4b74',
    '0xf8cb1d747b53bbd4b4346eb8522fa3df36025dafedeb5b19bf54a9fff946ae8a',
]

The flag is: flag{bf22a2d63563554c2073f9480867794e17297ce17c7ec4cc3502979828e4253f}
'''
